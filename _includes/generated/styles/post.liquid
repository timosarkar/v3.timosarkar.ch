/**
 * LESS Variables.
 */
/**
 * CSS Variables.
 */
:root {
  --accent: black;
  --secondary: #505060;
  --background: #ffffff;
  --text: #020210;
  --code-background: #020210;
  --code-text: #ffffff;
  --note-background: rgba(0, 0, 0, 0.035);
  --spacing: 1rem;
}
:root.color-scheme--dark {
  --accent: #7575ff;
  --secondary: #e0e0f0;
  --background: #020210;
  --text: #ffffff;
  --code-background: rgba(255, 255, 255, 0.05);
  --code-text: #ffffff;
  --note-background: rgba(255, 255, 255, 0.05);
}
@media (min-width: 798px) {
  :root {
    --spacing: 2rem;
  }
}
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url('/assets/fonts/Inter-Regular-subset.woff2') format('woff2'), url('/assets/fonts/Inter-Regular-subset.woff') format('woff');
}
@font-face {
  font-family: 'Inter';
  font-style: italic;
  font-weight: 400;
  font-display: swap;
  src: url('/assets/fonts/Inter-Italic-subset.woff2') format('woff2'), url('/assets/fonts/Inter-Italic-subset.woff') format('woff');
}
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url('/assets/fonts/Inter-Bold-subset.woff2') format('woff2'), url('/assets/fonts/Inter-Bold-subset.woff') format('woff');
}
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 800;
  font-display: swap;
  src: url('/assets/fonts/Inter-ExtraBold-subset.woff2') format('woff2'), url('/assets/fonts/Inter-ExtraBold-subset.woff') format('woff');
}
html {
  box-sizing: border-box;
  font-size: 16px;
}
@media (min-width: 798px) {
  html {
    font-size: 18px;
  }
}
@media (max-width: 320px) {
  html {
    font-size: 15px;
  }
}
*,
*:before,
*:after {
  box-sizing: inherit;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
*:focus {
  outline-color: var(--accent);
  outline-offset: 2px;
}
::selection {
  background-color: var(--accent);
  color: #fff;
}
body {
  background-color: var(--background);
  color: var(--text);
  font-family: 'Inter';
  line-height: 1.6;
  margin: 0;
  padding: 0;
  -webkit-text-size-adjust: 100%;
  transition-property: color, background-color;
  transition-duration: 0.25s;
}
/**
 * Some browsers don't support font-feature-settings inside font face
 * declarations, so they are needed at tag level. 
 */
body {
  font-feature-settings: 'ss01' on;
}
em {
  font-feature-settings: 'ss01' on, 'cv05' on, 'cv11' on;
}
a {
  color: var(--accent);
  text-decoration: none;
}
a:hover,
a:focus {
  text-decoration: underline;
  -webkit-text-decoration-skip-ink: all;
          text-decoration-skip-ink: all;
  text-decoration-thickness: 0.075em;
  text-underline-offset: 2px;
}
.container {
  padding: var(--spacing);
  margin-left: auto;
  margin-right: auto;
  max-width: 42rem;
}
.container > *:first-child {
  margin-top: 0;
}
.container > *:last-child {
  margin-bottom: 0;
}
.color-scheme__button {
  border: none;
  border-radius: 50%;
  background-color: var(--accent);
  height: 2rem;
  position: absolute;
  right: var(--spacing);
  top: var(--spacing);
  width: 2rem;
  /**
   * Only add active state styles when JavaScript takes
   * over the toggle button and makes it focusable.
   */
}
.color-scheme__button[tabindex='0']:active {
  transform: scale(0.95);
}
nav {
  align-items: flex-start;
  display: flex;
  flex-direction: column;
  padding: var(--spacing);
}
@media (min-width: 798px) {
  nav {
    flex-direction: row;
    justify-content: flex-end;
    padding: var(--spacing) 6rem var(--spacing) var(--spacing);
  }
}
.nav__link {
  font-size: 1.25rem;
  line-height: 2rem;
  margin: 0 0 0.1rem;
}
@media (min-width: 798px) {
  .nav__link {
    font-size: 1.111112rem;
    margin: 0 1rem 0 0;
  }
}
.nav__link:last-of-type {
  margin: 0;
}
.nav__link--home {
  color: var(--text);
}
.nav__link--skip-navigation {
  clip: rect(1px, 1px, 1px, 1px);
  color: var(--secondary);
  height: 1px;
  overflow: hidden;
  position: absolute;
  width: 1px;
}
.nav__link--skip-navigation:focus {
  clip: auto;
  height: auto;
  width: auto;
  position: static;
}
main {
  margin: 2rem 0;
}
@media (min-width: 798px) {
  main {
    margin: 4rem 0;
  }
}
.page__title {
  font-size: 2.625rem;
  font-weight: 800;
  letter-spacing: -0.02em;
  line-height: 1.15;
  margin: 0;
}
@media (min-width: 798px) {
  .page__title {
    /**
     * desktop 54px, and completely out of the Major Second Scale. I came up
     * with this number cause I couldn't decide which size was big enough
     * but not too big at the same time.
     */
    font-size: 3rem;
  }
}
.page__subtitle {
  color: var(--secondary);
  font-size: 0.9375rem;
  letter-spacing: 0.01em;
  margin: 0.5rem 0 0;
  text-transform: uppercase;
}
@media (min-width: 798px) {
  .page__subtitle {
    font-size: 0.888888rem;
  }
}
.page__excerpt {
  color: var(--secondary);
  font-size: 1.0625rem;
  margin: 2rem 0;
}
@media (min-width: 798px) {
  .page__excerpt {
    font-size: 1.083333rem;
    margin: 4rem 0 3rem;
  }
}
.page__note {
  background-color: var(--note-background);
  border-radius: 3px;
  margin-bottom: 2rem;
  padding: 1rem var(--spacing);
  text-align: center;
}
@media (min-width: 798px) {
  .page__note {
    margin-bottom: 3rem;
  }
}
.page__note-link {
  color: var(--text);
}
main p,
main ul {
  margin: 1.5rem 0;
}
@media (min-width: 798px) {
  main p,
  main ul {
    margin: 2rem 0;
  }
}
h2 {
  font-size: 2rem;
  font-weight: 800;
  letter-spacing: -0.02em;
  line-height: 1.15;
  margin: 3rem 0 0;
}
h3 {
  font-size: 1.555556rem;
  font-weight: 800;
  letter-spacing: -0.02em;
  line-height: 1.15;
  margin: 2rem 0 0;
}
h4 {
  font-size: 1.222223rem;
  font-weight: 800;
  letter-spacing: -0.02em;
  line-height: 1.15;
  margin: 2rem 0 0;
}
.header-anchor::before {
  content: '#';
  display: inline-block;
}
.header-anchor:hover::before,
.header-anchor:focus::before {
  text-decoration: underline;
  -webkit-text-decoration-skip-ink: all;
          text-decoration-skip-ink: all;
  text-decoration-thickness: 0.075em;
  text-underline-offset: 2px;
}
ul {
  padding: 0 0 0 2rem;
}
li + li {
  margin: 0.5rem 0 0;
}
blockquote {
  border-color: var(--accent);
  border-width: 0 0 0 0.25rem;
  border-style: solid;
  margin: 2.5rem 0;
  padding: calc(var(--spacing) / 2) var(--spacing);
}
@media (min-width: 798px) {
  blockquote {
    margin: 3rem 0;
  }
}
blockquote p {
  color: var(--secondary);
  font-size: 1.125rem;
  font-weight: 700;
  margin: 0;
}
@media (min-width: 798px) {
  blockquote p {
    font-size: 1.111112rem;
  }
}
cite {
  color: var(--text);
  display: inline-block;
  font-style: normal;
  margin: 0.5rem 0 0;
}
/**
 * Highlighting color pallette.
 */
code[class*='language'] .comment {
  color: rgba(255, 255, 255, 0.5);
}
code[class*='language'] .operator,
code[class*='language'] .boolean {
  color: #a77afe;
}
code[class*='language'] .number {
  color: #e6d06c;
}
code[class*='language'] .cdata,
code[class*='language'] .doctype,
code[class*='language'] .prolog {
  color: #aeaeba;
}
code[class*='language'] .attr-name,
code[class*='language'] .string,
code[class*='language'] .url {
  color: #e6d06c;
}
code[class*='language'] .atrule,
code[class*='language'] .attr-value,
code[class*='language'] .keyword,
code[class*='language'] .important,
code[class*='language'] .deleted,
code[class*='language'] .selector {
  color: #ef3b7d;
}
code[class*='language'] .regex,
code[class*='language'] .statement {
  color: #76d9e6;
}
code[class*='language'] .placeholder,
code[class*='language'] .variable {
  color: #ffffff;
}
code[class*='language'] .punctuation {
  color: #aeaeba;
}
code[class*='language'] .inserted {
  color: #a6e22d;
}
code.language-css .selector,
code.language-less .selector,
code.language-scss .selector,
code.language-sass .selector,
code.language-html .style .selector {
  color: #ef3b7d;
}
code.language-css .property,
code.language-less .property,
code.language-scss .property,
code.language-sass .property,
code.language-html .style .property {
  color: #76d9e6;
}
code.language-json .operator {
  color: #aeaeba;
}
code.language-html .tag {
  color: #ef3b7d;
}
code.language-html .attr-name {
  color: #a6e22d;
}
code.language-html .attr-value {
  color: #e6d06c;
}
code.language-html .script,
code.language-html .keyword {
  color: #76d9e6;
}
code {
  background-color: var(--code-background);
  border-radius: 3px;
  color: var(--code-text);
  font-family: Menlo, Consolas, Monaco, monospace;
  font-size: 15px;
  padding: 1px 3px;
}
pre {
  background-color: var(--code-background);
  color: var(--code-text);
  left: calc(var(--spacing) * -1);
  line-height: 1.5;
  overflow: auto;
  padding: 1rem 0;
  position: relative;
  width: 100vw;
}
@media (min-width: 798px) {
  pre {
    border-radius: 3px;
    width: 42rem;
  }
}
pre code {
  background-color: transparent;
  border-radius: 0;
  display: inline-block;
  padding: 0 var(--spacing);
}
.code-example__link {
  margin-top: 1rem;
  text-align: center;
}
/*# sourceMappingURL=data:application/json;base64, */