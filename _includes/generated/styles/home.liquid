/**
 * LESS Variables.
 */
/**
 * CSS Variables.
 */
:root {
  --accent: black;
  --secondary: #505060;
  --background: #ffffff;
  --text: #020210;
  --code-background: #020210;
  --code-text: #ffffff;
  --note-background: rgba(0, 0, 0, 0.035);
  --spacing: 1rem;
}
:root.color-scheme--dark {
  --accent: #7575ff;
  --secondary: #e0e0f0;
  --background: #020210;
  --text: #ffffff;
  --code-background: rgba(255, 255, 255, 0.05);
  --code-text: #ffffff;
  --note-background: rgba(255, 255, 255, 0.05);
}
@media (min-width: 798px) {
  :root {
    --spacing: 2rem;
  }
}
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url('/assets/fonts/Inter-Regular-subset.woff2') format('woff2'), url('/assets/fonts/Inter-Regular-subset.woff') format('woff');
}
@font-face {
  font-family: 'Inter';
  font-style: italic;
  font-weight: 400;
  font-display: swap;
  src: url('/assets/fonts/Inter-Italic-subset.woff2') format('woff2'), url('/assets/fonts/Inter-Italic-subset.woff') format('woff');
}
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url('/assets/fonts/Inter-Bold-subset.woff2') format('woff2'), url('/assets/fonts/Inter-Bold-subset.woff') format('woff');
}
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 800;
  font-display: swap;
  src: url('/assets/fonts/Inter-ExtraBold-subset.woff2') format('woff2'), url('/assets/fonts/Inter-ExtraBold-subset.woff') format('woff');
}
html {
  box-sizing: border-box;
  font-size: 16px;
}
@media (min-width: 798px) {
  html {
    font-size: 18px;
  }
}
@media (max-width: 320px) {
  html {
    font-size: 15px;
  }
}
*,
*:before,
*:after {
  box-sizing: inherit;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
*:focus {
  outline-color: var(--accent);
  outline-offset: 2px;
}
::selection {
  background-color: var(--accent);
  color: #fff;
}
body {
  background-color: var(--background);
  color: var(--text);
  font-family: 'Inter';
  line-height: 1.6;
  margin: 0;
  padding: 0;
  -webkit-text-size-adjust: 100%;
  transition-property: color, background-color;
  transition-duration: 0.25s;
}
/**
 * Some browsers don't support font-feature-settings inside font face
 * declarations, so they are needed at tag level. 
 */
body {
  font-feature-settings: 'ss01' on;
}
em {
  font-feature-settings: 'ss01' on, 'cv05' on, 'cv11' on;
}
a {
  color: var(--accent);
  text-decoration: none;
}
a:hover,
a:focus {
  text-decoration: underline;
  -webkit-text-decoration-skip-ink: all;
          text-decoration-skip-ink: all;
  text-decoration-thickness: 0.075em;
  text-underline-offset: 2px;
}
.container {
  padding: var(--spacing);
  margin-left: auto;
  margin-right: auto;
  max-width: 42rem;
}
.container > *:first-child {
  margin-top: 0;
}
.container > *:last-child {
  margin-bottom: 0;
}
.color-scheme__button {
  border: none;
  border-radius: 50%;
  background-color: var(--accent);
  height: 2rem;
  position: absolute;
  right: var(--spacing);
  top: var(--spacing);
  width: 2rem;
  /**
   * Only add active state styles when JavaScript takes
   * over the toggle button and makes it focusable.
   */
}
.color-scheme__button[tabindex='0']:active {
  transform: scale(0.95);
}
main {
  margin-top: 2rem;
}
@media (min-width: 798px) {
  main {
    margin-top: 10rem;
  }
}
.home__title {
  font-size: 2.625rem;
  font-weight: 800;
  line-height: 1;
  letter-spacing: -0.02em;
  margin: 0;
}
@media (min-width: 798px) {
  .home__title {
    font-size: 2.666665rem;
  }
}
.home__subtitle {
  color: var(--secondary);
  font-size: 0.9375rem;
  font-weight: normal;
  letter-spacing: 0.02em;
  margin: 0.5rem 0 1rem;
  text-transform: uppercase;
}
@media (min-width: 798px) {
  .home__subtitle {
    font-size: 0.888888rem;
  }
}
.home__bio {
  margin: 2rem 0;
  max-width: 32rem;
}
.home__nav--line {
  color: var(--secondary);
  line-height: 1;
  margin: 1rem 0 0;
  text-transform: lowercase;
}
@media (min-width: 798px) {
  .home__nav--line {
    display: inline-block;
    margin: 0;
  }
}
@media (min-width: 798px) {
  .home__nav--line + .home__nav--line {
    margin: 0 0 0 3rem;
  }
}
.home__nav--link {
  color: var(--accent);
  font-size: 2.5rem;
  display: block;
  font-weight: 800;
  letter-spacing: -0.02em;
  line-height: 1;
  text-transform: capitalize;
}
@media (min-width: 798px) {
  .home__nav--link {
    font-size: 2.666665rem;
  }
}
/*# sourceMappingURL=data:application/json;base64, */