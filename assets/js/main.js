(function () {
  'use strict';

  const COLOR_SCHEME_BUTTON_CLASSNAME = 'js--color-scheme__button';

  const COLOR_SCHEME_DARK_CLASSNAME = 'color-scheme--dark';

  const COLOR_SCHEME_KEY = 'colorScheme';
  const COLOR_SCHEME_DARK_VALUE = 'colorSchemeDark';
  const COLOR_SCHEME_LIGHT_VALUE = 'colorSchemeLight';

  // Check stored color scheme value
  const isDarkSchemeApplied = document.documentElement.classList.contains(
    COLOR_SCHEME_DARK_CLASSNAME
  );

  const colorSchemeButton = document.getElementsByClassName(
    COLOR_SCHEME_BUTTON_CLASSNAME
  )[0];

  // Make button accessible for screen readers and set press state
  colorSchemeButton.setAttribute('tabindex', '0');
  colorSchemeButton.setAttribute(
    'aria-pressed',
    isDarkSchemeApplied ? 'true' : 'false'
  );

  // Toggle color scheme on button click event
  colorSchemeButton.addEventListener('click', function () {
    const shouldChangeToDarkScheme = !document.documentElement.classList.contains(
      COLOR_SCHEME_DARK_CLASSNAME
    );

    // Update root element class name
    document.documentElement.classList.toggle(
      COLOR_SCHEME_DARK_CLASSNAME,
      shouldChangeToDarkScheme
    );

    // Set pressed attribute for button accessibility
    colorSchemeButton.setAttribute(
      'aria-pressed',
      shouldChangeToDarkScheme ? 'true' : 'false'
    );

    // Update cached state in web storage
    localStorage.setItem(
      COLOR_SCHEME_KEY,
      shouldChangeToDarkScheme
        ? COLOR_SCHEME_DARK_VALUE
        : COLOR_SCHEME_LIGHT_VALUE
    );
  });

  window.addEventListener('storage', function (event) {
    if (event.key === COLOR_SCHEME_KEY) {
      // Check if new value from different environment is dark scheme
      const shouldChangeToDarkScheme = event.newValue === COLOR_SCHEME_DARK_VALUE;

      // Update root element class name
      document.documentElement.classList.toggle(
        COLOR_SCHEME_DARK_CLASSNAME,
        shouldChangeToDarkScheme
      );
    }
  });

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2pzL19jb25zdGFudHMuanMiLCIuLi8uLi9zcmMvanMvbWFpbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgQ09MT1JfU0NIRU1FX0JVVFRPTl9DTEFTU05BTUUgPSAnanMtLWNvbG9yLXNjaGVtZV9fYnV0dG9uJztcblxuZXhwb3J0IGNvbnN0IENPTE9SX1NDSEVNRV9EQVJLX0NMQVNTTkFNRSA9ICdjb2xvci1zY2hlbWUtLWRhcmsnO1xuXG5leHBvcnQgY29uc3QgQ09MT1JfU0NIRU1FX0tFWSA9ICdjb2xvclNjaGVtZSc7XG5leHBvcnQgY29uc3QgQ09MT1JfU0NIRU1FX0RBUktfVkFMVUUgPSAnY29sb3JTY2hlbWVEYXJrJztcbmV4cG9ydCBjb25zdCBDT0xPUl9TQ0hFTUVfTElHSFRfVkFMVUUgPSAnY29sb3JTY2hlbWVMaWdodCc7XG4iLCJpbXBvcnQge1xuICBDT0xPUl9TQ0hFTUVfQlVUVE9OX0NMQVNTTkFNRSxcbiAgQ09MT1JfU0NIRU1FX0RBUktfVkFMVUUsXG4gIENPTE9SX1NDSEVNRV9LRVksXG4gIENPTE9SX1NDSEVNRV9EQVJLX0NMQVNTTkFNRSxcbiAgQ09MT1JfU0NIRU1FX0xJR0hUX1ZBTFVFXG59IGZyb20gJy4vX2NvbnN0YW50cyc7XG5cbi8vIENoZWNrIHN0b3JlZCBjb2xvciBzY2hlbWUgdmFsdWVcbmNvbnN0IGlzRGFya1NjaGVtZUFwcGxpZWQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKFxuICBDT0xPUl9TQ0hFTUVfREFSS19DTEFTU05BTUVcbik7XG5cbmNvbnN0IGNvbG9yU2NoZW1lQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcbiAgQ09MT1JfU0NIRU1FX0JVVFRPTl9DTEFTU05BTUVcbilbMF07XG5cbi8vIE1ha2UgYnV0dG9uIGFjY2Vzc2libGUgZm9yIHNjcmVlbiByZWFkZXJzIGFuZCBzZXQgcHJlc3Mgc3RhdGVcbmNvbG9yU2NoZW1lQnV0dG9uLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAnMCcpO1xuY29sb3JTY2hlbWVCdXR0b24uc2V0QXR0cmlidXRlKFxuICAnYXJpYS1wcmVzc2VkJyxcbiAgaXNEYXJrU2NoZW1lQXBwbGllZCA/ICd0cnVlJyA6ICdmYWxzZSdcbik7XG5cbi8vIFRvZ2dsZSBjb2xvciBzY2hlbWUgb24gYnV0dG9uIGNsaWNrIGV2ZW50XG5jb2xvclNjaGVtZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgY29uc3Qgc2hvdWxkQ2hhbmdlVG9EYXJrU2NoZW1lID0gIWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoXG4gICAgQ09MT1JfU0NIRU1FX0RBUktfQ0xBU1NOQU1FXG4gICk7XG5cbiAgLy8gVXBkYXRlIHJvb3QgZWxlbWVudCBjbGFzcyBuYW1lXG4gIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc0xpc3QudG9nZ2xlKFxuICAgIENPTE9SX1NDSEVNRV9EQVJLX0NMQVNTTkFNRSxcbiAgICBzaG91bGRDaGFuZ2VUb0RhcmtTY2hlbWVcbiAgKTtcblxuICAvLyBTZXQgcHJlc3NlZCBhdHRyaWJ1dGUgZm9yIGJ1dHRvbiBhY2Nlc3NpYmlsaXR5XG4gIGNvbG9yU2NoZW1lQnV0dG9uLnNldEF0dHJpYnV0ZShcbiAgICAnYXJpYS1wcmVzc2VkJyxcbiAgICBzaG91bGRDaGFuZ2VUb0RhcmtTY2hlbWUgPyAndHJ1ZScgOiAnZmFsc2UnXG4gICk7XG5cbiAgLy8gVXBkYXRlIGNhY2hlZCBzdGF0ZSBpbiB3ZWIgc3RvcmFnZVxuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcbiAgICBDT0xPUl9TQ0hFTUVfS0VZLFxuICAgIHNob3VsZENoYW5nZVRvRGFya1NjaGVtZVxuICAgICAgPyBDT0xPUl9TQ0hFTUVfREFSS19WQUxVRVxuICAgICAgOiBDT0xPUl9TQ0hFTUVfTElHSFRfVkFMVUVcbiAgKTtcbn0pO1xuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc3RvcmFnZScsIGZ1bmN0aW9uIChldmVudCkge1xuICBpZiAoZXZlbnQua2V5ID09PSBDT0xPUl9TQ0hFTUVfS0VZKSB7XG4gICAgLy8gQ2hlY2sgaWYgbmV3IHZhbHVlIGZyb20gZGlmZmVyZW50IGVudmlyb25tZW50IGlzIGRhcmsgc2NoZW1lXG4gICAgY29uc3Qgc2hvdWxkQ2hhbmdlVG9EYXJrU2NoZW1lID0gZXZlbnQubmV3VmFsdWUgPT09IENPTE9SX1NDSEVNRV9EQVJLX1ZBTFVFO1xuXG4gICAgLy8gVXBkYXRlIHJvb3QgZWxlbWVudCBjbGFzcyBuYW1lXG4gICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoXG4gICAgICBDT0xPUl9TQ0hFTUVfREFSS19DTEFTU05BTUUsXG4gICAgICBzaG91bGRDaGFuZ2VUb0RhcmtTY2hlbWVcbiAgICApO1xuICB9XG59KTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7RUFBTyxNQUFNLDZCQUE2QixHQUFHLDBCQUEwQixDQUFDO0FBQ3hFO0VBQ08sTUFBTSwyQkFBMkIsR0FBRyxvQkFBb0IsQ0FBQztBQUNoRTtFQUNPLE1BQU0sZ0JBQWdCLEdBQUcsYUFBYSxDQUFDO0VBQ3ZDLE1BQU0sdUJBQXVCLEdBQUcsaUJBQWlCLENBQUM7RUFDbEQsTUFBTSx3QkFBd0IsR0FBRyxrQkFBa0I7O0VDRTFEO0VBQ0EsTUFBTSxtQkFBbUIsR0FBRyxRQUFRLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxRQUFRO0VBQ3ZFLEVBQUUsMkJBQTJCO0VBQzdCLENBQUMsQ0FBQztBQUNGO0VBQ0EsTUFBTSxpQkFBaUIsR0FBRyxRQUFRLENBQUMsc0JBQXNCO0VBQ3pELEVBQUUsNkJBQTZCO0VBQy9CLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNMO0VBQ0E7RUFDQSxpQkFBaUIsQ0FBQyxZQUFZLENBQUMsVUFBVSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0VBQ2hELGlCQUFpQixDQUFDLFlBQVk7RUFDOUIsRUFBRSxjQUFjO0VBQ2hCLEVBQUUsbUJBQW1CLEdBQUcsTUFBTSxHQUFHLE9BQU87RUFDeEMsQ0FBQyxDQUFDO0FBQ0Y7RUFDQTtFQUNBLGlCQUFpQixDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxZQUFZO0VBQ3hELEVBQUUsTUFBTSx3QkFBd0IsR0FBRyxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLFFBQVE7RUFDL0UsSUFBSSwyQkFBMkI7RUFDL0IsR0FBRyxDQUFDO0FBQ0o7RUFDQTtFQUNBLEVBQUUsUUFBUSxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsTUFBTTtFQUMzQyxJQUFJLDJCQUEyQjtFQUMvQixJQUFJLHdCQUF3QjtFQUM1QixHQUFHLENBQUM7QUFDSjtFQUNBO0VBQ0EsRUFBRSxpQkFBaUIsQ0FBQyxZQUFZO0VBQ2hDLElBQUksY0FBYztFQUNsQixJQUFJLHdCQUF3QixHQUFHLE1BQU0sR0FBRyxPQUFPO0VBQy9DLEdBQUcsQ0FBQztBQUNKO0VBQ0E7RUFDQSxFQUFFLFlBQVksQ0FBQyxPQUFPO0VBQ3RCLElBQUksZ0JBQWdCO0VBQ3BCLElBQUksd0JBQXdCO0VBQzVCLFFBQVEsdUJBQXVCO0VBQy9CLFFBQVEsd0JBQXdCO0VBQ2hDLEdBQUcsQ0FBQztFQUNKLENBQUMsQ0FBQyxDQUFDO0FBQ0g7RUFDQSxNQUFNLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxFQUFFLFVBQVUsS0FBSyxFQUFFO0VBQ3BELEVBQUUsSUFBSSxLQUFLLENBQUMsR0FBRyxLQUFLLGdCQUFnQixFQUFFO0VBQ3RDO0VBQ0EsSUFBSSxNQUFNLHdCQUF3QixHQUFHLEtBQUssQ0FBQyxRQUFRLEtBQUssdUJBQXVCLENBQUM7QUFDaEY7RUFDQTtFQUNBLElBQUksUUFBUSxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsTUFBTTtFQUM3QyxNQUFNLDJCQUEyQjtFQUNqQyxNQUFNLHdCQUF3QjtFQUM5QixLQUFLLENBQUM7RUFDTixHQUFHO0VBQ0gsQ0FBQyxDQUFDOzs7Ozs7In0=
